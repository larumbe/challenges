# Even Fibonacci numbers
# Problem 2

# Each new term in the Fibonacci sequence is generated by adding the
# previous two terms. By starting with 1 and 2, the first 10 terms
# will be:

# 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...

# By considering the terms in the Fibonacci sequence whose values do
# not exceed four million, find the sum of the even-valued terms.

# Pythonic way of generatinc Fibbonacy numbers?
# With yield

def sumPairFibUntil(until):
    sequence = [1, 2]
    dos = sequence[-1] + sequence[-2]
    while (dos < until):
        sequence.append(dos)
        dos = sequence[-1] + sequence[-2]
    return sum([x for x in sequence if (x % 2 == 0)])
